{"version":3,"sources":["components/Display/DisplayInnings.js","components/Display/DisplayTotal.js","components/Display/PitchesTotal.js","components/Display/Possession.js","components/Display/Display.js","App.js","serviceWorker.js","index.js"],"names":["DisplayInnings","props","className","DisplayTotal","PitchesTotal","name","Possession","Display","borderSide","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRAkGeA,G,UAhGQ,SAAAC,GACrB,OACE,yBAAKC,UAAU,+BACb,wBAAIA,UAAU,2BAAd,SACA,wBAAIA,UAAU,0BAAd,QACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,kCAEF,yBAAKA,UAAU,2BACb,mCAGJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,mCAEF,yBAAKA,UAAU,kCACb,oCAGJ,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,mCAEF,yBAAKA,UAAU,gCACb,uCCzEKC,EAhBM,SAAAF,GACnB,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,uBAAd,UAEF,yBAAKA,UAAU,uBACb,mCAEF,yBAAKA,UAAU,sBACb,qCCMOE,EAhBM,SAAAH,GACnB,OACE,yBAAKC,UAAS,sBACZ,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,kBAAd,UACS,6BACP,8BAAOD,EAAMI,QAGjB,yBAAKH,UAAU,kBACb,qCCGOI,EAbI,SAAAL,GACjB,OACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,qBAAqBD,EAAMI,OAE3C,yBAAKH,UAAU,qBACb,qCCwBOK,EA1BC,SAAAN,GACd,OACE,yBAAKC,UAAU,sBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,iCACb,kBAAC,EAAD,CAAcG,KAAK,OAAOG,WAAW,WAEvC,yBAAKN,UAAU,sBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAYG,KAAK,UAEnB,yBAAKH,UAAU,sBACb,kBAAC,EAAD,CAAYG,KAAK,YAEnB,yBAAKH,UAAU,mBACb,kBAAC,EAAD,CAAYG,KAAK,UAGrB,yBAAKH,UAAU,gCACb,kBAAC,EAAD,CAAcG,KAAK,OAAOG,WAAW,Y,MCf9BC,MARf,WACE,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,QCKcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e1a3f2ba.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DisplayInnings = props => {\n  return (\n    <div className=\"display__innings--container\">\n      <h2 className=\"display__innings--guest\">Guest</h2>\n      <h2 className=\"display__innings--home\">Home</h2>\n      <div className=\"inning--header\">\n        <div className=\"inning--title inning--1\">\n          <h4>1</h4>\n        </div>\n        <div className=\"inning--title inning--2\">\n          <h4>2</h4>\n        </div>\n        <div className=\"inning--title inning--3\">\n          <h4>3</h4>\n        </div>\n        <div className=\"inning--title inning--4\">\n          <h4>4</h4>\n        </div>\n        <div className=\"inning--title inning--5\">\n          <h4>5</h4>\n        </div>\n        <div className=\"inning--title inning--6\">\n          <h4>6</h4>\n        </div>\n        <div className=\"inning--title inning--7\">\n          <h4>7</h4>\n        </div>\n        <div className=\"inning--title inning--8\">\n          <h4>8</h4>\n        </div>\n        <div className=\"inning--title inning--9\">\n          <h4>9</h4>\n        </div>\n      </div>\n      <div className=\"guest__inning--container\">\n        <div className=\"guest__inning guest__inning--1\">\n          <h2>i1</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--2\">\n          <h2>i2</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--3\">\n          <h2>i3</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--4\">\n          <h2>i4</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--5\">\n          <h2>i5</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--6\">\n          <h2>i6</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--7\">\n          <h2>i7</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--8\">\n          <h2>i8</h2>\n        </div>\n        <div className=\"guest__inning guest__inning--9\">\n          <h2>i9</h2>\n        </div>\n      </div>\n      <div className=\"home__inning--container\">\n        <div className=\"home__inning home__inning--1\">\n          <h2>i1</h2>\n        </div>\n        <div className=\"home__inning home__inning--2\">\n          <h2>i2</h2>\n        </div>\n        <div className=\"home__inning home__inning--3\">\n          <h2>i3</h2>\n        </div>\n        <div className=\"home__inning home__inning--4\">\n          <h2>i4</h2>\n        </div>\n        <div className=\"home__inning home__inning--5\">\n          <h2>i5</h2>\n        </div>\n        <div className=\"home__inning home__inning--6\">\n          <h2>i6</h2>\n        </div>\n        <div className=\"home__inning home__inning--7\">\n          <h2>i7</h2>\n        </div>\n        <div className=\"home__inning home__inning--8\">\n          <h2>i8</h2>\n        </div>\n        <div className=\"home__inning home__inning--9\">\n          <h2>i9</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayInnings;\n","import React from \"react\";\n\nconst DisplayTotal = props => {\n  return (\n    <div className=\"total__score--container\">\n      <div className=\"total__score--header\">\n        <h4 className=\"total__score--title\">Total</h4>\n      </div>\n      <div className=\"total__score--guest\">\n        <h2>00</h2>\n      </div>\n      <div className=\"total__score--home\">\n        <h2>00</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayTotal;\n","import React from \"react\";\n\nconst PitchesTotal = props => {\n  return (\n    <div className={`pitches--container`}>\n      <div className=\"pitches--header\">\n        <h2 className=\"pitches--title\">\n          Pitches<br></br>\n          <span>{props.name}</span>\n        </h2>\n      </div>\n      <div className=\"pitches--total\">\n        <h2>00</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default PitchesTotal;\n","import React from \"react\";\n\nconst Possession = props => {\n  return (\n    <div className=\"possession--container\">\n      <div className=\"possession--header\">\n        <h2 className=\"possession--title\">{props.name}</h2>\n      </div>\n      <div className=\"possession--total\">\n        <h2>00</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Possession;\n","import React from \"react\";\nimport \"./Display.scss\";\nimport DisplayInnings from \"./DisplayInnings\";\nimport DisplayTotal from \"./DisplayTotal\";\nimport PitchesTotal from \"./PitchesTotal\";\nimport Possession from \"./Possession\";\n\nconst Display = props => {\n  return (\n    <div className=\"display__container\">\n      <DisplayInnings />\n      <DisplayTotal />\n      <div className=\"pitches-home--container right\">\n        <PitchesTotal name=\"Home\" borderSide=\"right\" />\n      </div>\n      <div className=\"possession-wrapper\">\n        <div className=\"possession--ball\">\n          <Possession name=\"Ball\" />\n        </div>\n        <div className=\"possession--strike\">\n          <Possession name=\"Strike\" />\n        </div>\n        <div className=\"possession--out\">\n          <Possession name=\"Out\" />\n        </div>\n      </div>\n      <div className=\"pitches-away--container left\">\n        <PitchesTotal name=\"Away\" borderSide=\"left\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Display;\n","import React from \"react\";\nimport Display from \"./components/Display/Display\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Display />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}