{"version":3,"sources":["components/Display/DisplayInnings.js","components/Display/DisplayTotal.js","components/Display/PitchesTotal.js","components/Display/Possession.js","components/Display/Display.js","App.js","serviceWorker.js","index.js"],"names":["DisplayInnings","guestInningTotal","homeInningTotal","className","Object","keys","map","inning","key","DisplayTotal","guestScore","homeScore","PitchesTotal","props","name","Possession","count","Display","ball","strike","outs","homerun","guestInning","guestAtBat","homeAtBat","inningHRCounter","homeInning","borderSide","App","state","1","2","3","4","5","6","7","8","9","resetPosession","setState","resetAll","nextPossession","alert","handleClick","play","Math","random","console","log","guestInningUpdatedTotal","homeInningUpdatedTotal","this","onClick","style","color","fontWeight","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11591f96.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DisplayInnings = ({ guestInningTotal, homeInningTotal }) => {\n  return (\n    <div className=\"display__innings--container\">\n      <h2 className=\"display__innings--guest\">Guest</h2>\n      <h2 className=\"display__innings--home\">Home</h2>\n      <div className=\"inning--header\">\n        {Object.keys(homeInningTotal).map(inning => (\n          <div className=\"inning--title\" key={inning}>\n            <h4>{inning}</h4>\n          </div>\n        ))}\n      </div>\n      <div className=\"guest__inning--container\">\n        {Object.keys(guestInningTotal).map(inning => (\n          <div className=\"guest__inning \" key={inning}>\n            <h2>{guestInningTotal[inning]}</h2>\n          </div>\n        ))}\n      </div>\n      <div className=\"home__inning--container\">\n        {Object.keys(homeInningTotal).map(inning => (\n          <div className=\"home__inning \" key={inning}>\n            <h2>{homeInningTotal[inning]}</h2>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayInnings;\n","import React from \"react\";\n\nconst DisplayTotal = ({ guestScore, homeScore }) => {\n  return (\n    <div className=\"total__score--container\">\n      <div className=\"total__score--header\">\n        <h4 className=\"total__score--title\">Total</h4>\n      </div>\n      <div className=\"total__score--guest\">\n        <h2>{guestScore}</h2>\n      </div>\n      <div className=\"total__score--home\">\n        <h2>{homeScore}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayTotal;\n","import React from \"react\";\n\nconst PitchesTotal = props => {\n  return (\n    <div className={`pitches--container`}>\n      <div className=\"pitches--header\">\n        <h2 className=\"pitches--title\">\n          Pitches<br></br>\n          <span>{props.name}</span>\n        </h2>\n      </div>\n      <div className=\"pitches--total\">\n        <h2>00</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default PitchesTotal;\n","import React from \"react\";\n\nconst Possession = ({ name, count }) => {\n  return (\n    <div className=\"possession--container\">\n      <div className=\"possession--header\">\n        <h2 className=\"possession--title\">{name}</h2>\n      </div>\n      <div className=\"possession--total\">\n        <h2>{count}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Possession;\n","import React from \"react\";\nimport \"./Display.scss\";\nimport DisplayInnings from \"./DisplayInnings\";\nimport DisplayTotal from \"./DisplayTotal\";\nimport PitchesTotal from \"./PitchesTotal\";\nimport Possession from \"./Possession\";\n\nconst Display = ({\n  ball,\n  strike,\n  outs,\n  homerun,\n  guestScore,\n  homeScore,\n  guestAtBat,\n  homeAtBat,\n  inningHRCounter,\n  guestInning,\n  guestInningTotal,\n  homeInning,\n  homeInningTotal\n}) => {\n  return (\n    <div className=\"display__container\">\n      <DisplayInnings\n        guestInningTotal={guestInningTotal}\n        homeInningTotal={homeInningTotal}\n        guestInning={guestInning}\n        homeInning={homeInning}\n      />\n      <DisplayTotal guestScore={guestScore} homeScore={homeScore} />\n      <div className=\"pitches-home--container right\">\n        <PitchesTotal name=\"Home\" borderSide=\"right\" />\n      </div>\n      <div className=\"possession-wrapper\">\n        <div className=\"possession--ball\">\n          <Possession name=\"Ball\" count={ball} />\n        </div>\n        <div className=\"possession--strike\">\n          <Possession name=\"Strike\" count={strike} />\n        </div>\n        <div className=\"possession--out\">\n          <Possession name=\"Out\" count={outs} />\n        </div>\n      </div>\n      <div className=\"pitches-away--container left\">\n        <PitchesTotal name=\"Away\" borderSide=\"left\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Display;\n","import React, { Component } from \"react\";\nimport Display from \"./components/Display/Display\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    ball: 0,\n    strike: 0,\n    outs: 0,\n    guestScore: 0,\n    homeScore: 0,\n    guestAtBat: true,\n    homeAtBat: false,\n    guestInning: 1,\n    guestInningTotal: {\n      1: 0,\n      2: 0,\n      3: 0,\n      4: 0,\n      5: 0,\n      6: 0,\n      7: 0,\n      8: 0,\n      9: 0\n    },\n    homeInning: 1,\n    homeInningTotal: {\n      1: 0,\n      2: 0,\n      3: 0,\n      4: 0,\n      5: 0,\n      6: 0,\n      7: 0,\n      8: 0,\n      9: 0\n    },\n    inningHRCounter: 0\n  };\n\n  resetPosession = () => {\n    this.setState({\n      ball: 0,\n      strike: 0\n    });\n  };\n  resetAll = () => {\n    if (this.state.guestAtBat) {\n      this.setState({\n        ball: 0,\n        strike: 0,\n        outs: 0,\n        guestAtBat: !this.state.guestAtBat,\n        homeAtBat: !this.state.homeAtBat,\n\n        guestInning: this.state.guestInning + 1,\n        inningHRCounter: 0\n      });\n    } else {\n      this.setState({\n        ball: 0,\n        strike: 0,\n        outs: 0,\n        guestAtBat: !this.state.guestAtBat,\n        homeAtBat: !this.state.homeAtBat,\n\n        homeInning: this.state.homeInning + 1,\n        inningHRCounter: 0\n      });\n    }\n  };\n\n  nextPossession = () => {\n    if (this.state.outs === 3) {\n      alert(\"You have 3 OUTS! Next Team at Bat!\");\n      this.resetAll();\n    } else {\n      this.setState({\n        outs: this.state.outs + 1\n      });\n      alert(\"Out!\");\n\n      this.resetPosession();\n    }\n  };\n\n  handleClick = () => {\n    const {\n      strike,\n      ball,\n      outs,\n      guestAtBat,\n      guestScore,\n      homeAtBat,\n      homeScore,\n      guestInningTotal,\n      guestInning,\n      homeInningTotal,\n      homeInning,\n      inningHRCounter\n    } = this.state;\n\n    const play = Math.random() * 100;\n    console.log(play);\n\n    const guestInningUpdatedTotal = { ...guestInningTotal };\n    guestInningUpdatedTotal[guestInning] = inningHRCounter + 1;\n\n    const homeInningUpdatedTotal = { ...homeInningTotal };\n    homeInningUpdatedTotal[homeInning] = inningHRCounter + 1;\n\n    /////////////////////////////////////\n    /////////////////////////// IF STRIKE\n    if (play < 45) {\n      if (strike < 3 && outs < 3 && ball < 4) {\n        this.setState({\n          strike: strike + 1\n        });\n        alert(\"Strike!\");\n      } else if (strike > 2 && outs < 3 && ball < 4) {\n        this.setState({\n          outs: outs + 1\n        });\n        alert(\"Out!\");\n        this.resetPosession();\n      }\n    }\n    /////////////////////////////////////\n    ///////////////////////////// IF BALL\n    else if (play > 45 && play < 90) {\n      if (ball < 4 && outs < 3 && strike < 3) {\n        this.setState({\n          ball: ball + 1\n        });\n        alert(\"Ball!\");\n      } else if (ball > 3 && outs < 3 && strike < 3) {\n        this.setState({\n          ball: ball + 1,\n          outs: outs + 1\n        });\n        alert(\"Out!\");\n        this.resetPosession();\n      }\n    }\n    /////////////////////////////////////\n    ////////////////////////// IF HOMERUN\n    else if (play > 90) {\n      if (guestAtBat) {\n        if (strike < 3 && ball < 4) {\n          this.setState({\n            guestScore: guestScore + 1,\n            inningHRCounter: inningHRCounter + 1,\n            guestInningTotal: guestInningUpdatedTotal\n          });\n          alert(\"Guest Team Homerun!\");\n          this.resetPosession();\n        }\n      } else if (homeAtBat) {\n        if (strike < 3 && ball < 4) {\n          this.setState({\n            homeScore: homeScore + 1,\n            inningHRCounter: inningHRCounter + 1,\n            homeInningTotal: homeInningUpdatedTotal\n          });\n          alert(\"Home Team Homerun!\");\n          this.resetPosession();\n        }\n      }\n    }\n  };\n\n  render() {\n    const {\n      ball,\n      strike,\n      outs,\n      homerun,\n      guestScore,\n      homeScore,\n      guestAtBat,\n      homeAtBat,\n      inningHRCounter,\n      guestInning,\n      guestInningTotal,\n      homeInning,\n      homeInningTotal\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {ball === 4 || strike === 3 || outs === 3 ? (\n          <button onClick={this.nextPossession}>\n            {outs === 3 ? \"Click for Next TEAM!\" : \"Click for Next Possession!\"}\n          </button>\n        ) : (\n          <button onClick={this.handleClick}>Play Ball!</button>\n        )}\n        <div\n          className=\"at-bat\"\n          style={{ color: \"green\", fontWeight: \"bolder\" }}\n        >\n          At Bat: {guestAtBat ? \"Guest\" : \"Home\"}\n        </div>\n        <div\n          className=\"at-bat\"\n          style={{ color: \"green\", fontWeight: \"bolder\" }}\n        >\n          Inning Homeruns: {inningHRCounter}\n        </div>\n\n        <Display\n          ball={ball}\n          strike={strike}\n          outs={outs}\n          homerun={homerun}\n          guestScore={guestScore}\n          homeScore={homeScore}\n          guestAtBat={guestAtBat}\n          homeAtBat={homeAtBat}\n          guestInningTotal={guestInningTotal}\n          homeInningTotal={homeInningTotal}\n          guestInning={guestInning}\n          homeInning={homeInning}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}