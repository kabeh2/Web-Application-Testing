{"version":3,"sources":["components/Display/DisplayInnings.js","components/Display/DisplayTotal.js","components/Display/PitchesTotal.js","components/Display/Possession.js","components/Display/Display.js","InitialState.js","App.js","serviceWorker.js","index.js"],"names":["DisplayInnings","guestInningTotal","homeInningTotal","className","Object","keys","map","inning","key","style","color","DisplayTotal","guestScore","homeScore","PitchesTotal","name","pitchesTotal","Possession","count","Display","ball","strike","outs","guestInning","homeInning","pitchesGuest","pitchesHome","borderSide","InitialState","guestAtBat","homeAtBat","1","2","3","4","5","6","7","8","9","inningHRCounter","App","state","handleGameRestart","setState","resetPosession","resetAll","nextPossession","alert","handleClick","play","Math","random","console","log","guestInningUpdatedTotal","homeInningUpdatedTotal","this","homerun","onClick","disabled","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0829ce5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DisplayInnings = ({ guestInningTotal, homeInningTotal }) => {\n  return (\n    <div className=\"display__innings--container\">\n      <h2 className=\"display__innings--guest\">Guest</h2>\n      <h2 className=\"display__innings--home\">Home</h2>\n      <div className=\"inning--header\">\n        {Object.keys(homeInningTotal).map(inning => (\n          <div className=\"inning--title\" key={inning}>\n            <h4>{inning}</h4>\n          </div>\n        ))}\n      </div>\n      <div className=\"guest__inning--container\">\n        {Object.keys(guestInningTotal).map(inning => (\n          <div className=\"guest__inning \" key={inning}>\n            <h2\n              style={{\n                color: guestInningTotal[inning] > 0 ? \"#fff\" : \"crimson\"\n              }}\n            >\n              {guestInningTotal[inning]}\n            </h2>\n          </div>\n        ))}\n      </div>\n      <div className=\"home__inning--container\">\n        {Object.keys(homeInningTotal).map(inning => (\n          <div className=\"home__inning \" key={inning}>\n            <h2\n              style={{\n                color: homeInningTotal[inning] > 0 ? \"#fff\" : \"crimson\"\n              }}\n            >\n              {homeInningTotal[inning]}\n            </h2>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayInnings;\n","import React from \"react\";\n\nconst DisplayTotal = ({ guestScore, homeScore }) => {\n  return (\n    <div className=\"total__score--container\">\n      <div className=\"total__score--header\">\n        <h4 className=\"total__score--title\">Total</h4>\n      </div>\n      <div className=\"total__score--guest\">\n        <h2>{`G: ${guestScore}`}</h2>\n      </div>\n      <div className=\"total__score--home\">\n        <h2>{`H: ${homeScore}`}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayTotal;\n","import React from \"react\";\n\nconst PitchesTotal = ({ name, pitchesTotal }) => {\n  return (\n    <div className={`pitches--container`}>\n      <div className=\"pitches--header\">\n        <h2 className=\"pitches--title\">\n          Pitches<br></br>\n          <span>{name}</span>\n        </h2>\n      </div>\n      <div className=\"pitches--total\">\n        <h2>{pitchesTotal}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default PitchesTotal;\n","import React from \"react\";\n\nconst Possession = ({ name, count }) => {\n  return (\n    <div className=\"possession--container\">\n      <div className=\"possession--header\">\n        <h2 className=\"possession--title\">{name}</h2>\n      </div>\n      <div className=\"possession--total\">\n        <h2>{count}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Possession;\n","import React from \"react\";\nimport \"./Display.scss\";\nimport DisplayInnings from \"./DisplayInnings\";\nimport DisplayTotal from \"./DisplayTotal\";\nimport PitchesTotal from \"./PitchesTotal\";\nimport Possession from \"./Possession\";\n\nconst Display = ({\n  ball,\n  strike,\n  outs,\n  guestScore,\n  homeScore,\n  guestInning,\n  guestInningTotal,\n  homeInning,\n  homeInningTotal,\n  pitchesGuest,\n  pitchesHome\n}) => {\n  return (\n    <div className=\"display__container\">\n      <DisplayInnings\n        guestInningTotal={guestInningTotal}\n        homeInningTotal={homeInningTotal}\n        guestInning={guestInning}\n        homeInning={homeInning}\n      />\n      <DisplayTotal guestScore={guestScore} homeScore={homeScore} />\n      <div className=\"pitches-home--container right\">\n        <PitchesTotal\n          name=\"Home\"\n          borderSide=\"right\"\n          pitchesTotal={pitchesHome}\n        />\n      </div>\n      <div className=\"possession-wrapper\">\n        <div className=\"possession--ball\">\n          <Possession name=\"Ball\" count={ball} />\n        </div>\n        <div className=\"possession--strike\">\n          <Possession name=\"Strike\" count={strike} />\n        </div>\n        <div className=\"possession--out\">\n          <Possession name=\"Out\" count={outs} />\n        </div>\n      </div>\n      <div className=\"pitches-away--container left\">\n        <PitchesTotal\n          name=\"Guest\"\n          borderSide=\"left\"\n          pitchesTotal={pitchesGuest}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Display;\n","export const InitialState = {\n  ball: 0,\n  strike: 0,\n  outs: 0,\n  guestScore: 0,\n  homeScore: 0,\n  guestAtBat: true,\n  homeAtBat: false,\n  pitchesGuest: 0,\n  pitchesHome: 0,\n  guestInning: 1,\n  guestInningTotal: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0\n  },\n  homeInning: 1,\n  homeInningTotal: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0\n  },\n  inningHRCounter: 0\n};\n","import React, { Component } from \"react\";\nimport Display from \"./components/Display/Display\";\nimport { InitialState } from \"./InitialState\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = InitialState;\n\n  handleGameRestart = () => {\n    this.setState(InitialState);\n  };\n\n  resetPosession = () => {\n    this.setState({\n      ball: 0,\n      strike: 0\n    });\n  };\n  resetAll = () => {\n    if (this.state.guestAtBat) {\n      this.setState({\n        ball: 0,\n        strike: 0,\n        outs: 0,\n        guestAtBat: !this.state.guestAtBat,\n        homeAtBat: !this.state.homeAtBat,\n\n        guestInning: this.state.guestInning + 1,\n        inningHRCounter: 0\n      });\n    } else {\n      this.setState({\n        ball: 0,\n        strike: 0,\n        outs: 0,\n        guestAtBat: !this.state.guestAtBat,\n        homeAtBat: !this.state.homeAtBat,\n\n        homeInning: this.state.homeInning + 1,\n        inningHRCounter: 0\n      });\n    }\n  };\n\n  nextPossession = () => {\n    if (this.state.outs === 3) {\n      alert(\"You have 3 OUTS! Next Team at Bat!\");\n      this.resetAll();\n    } else {\n      this.setState({\n        outs: this.state.outs + 1\n      });\n      alert(\"Out!\");\n\n      this.resetPosession();\n    }\n  };\n\n  handleClick = () => {\n    const {\n      strike,\n      ball,\n      outs,\n      guestAtBat,\n      guestScore,\n      homeAtBat,\n      homeScore,\n      guestInningTotal,\n      guestInning,\n      homeInningTotal,\n      homeInning,\n      inningHRCounter,\n      pitchesGuest,\n      pitchesHome\n    } = this.state;\n\n    const play = Math.random() * 100;\n    console.log(play);\n\n    const guestInningUpdatedTotal = { ...guestInningTotal };\n    guestInningUpdatedTotal[guestInning] = inningHRCounter + 1;\n\n    const homeInningUpdatedTotal = { ...homeInningTotal };\n    homeInningUpdatedTotal[homeInning] = inningHRCounter + 1;\n\n    /////////////////////////////////////\n    /////////////////////////// IF STRIKE\n    if (play < 45) {\n      if (strike < 3 && outs < 3 && ball < 4) {\n        this.setState({\n          strike: strike + 1\n        });\n        alert(\"Strike!\");\n        if (guestAtBat) {\n          this.setState({\n            pitchesGuest: pitchesGuest + 1\n          });\n        } else {\n          this.setState({\n            pitchesHome: pitchesHome + 1\n          });\n        }\n      } else if (strike > 2 && outs < 3 && ball < 4) {\n        this.setState({\n          outs: outs + 1\n        });\n        alert(\"Out!\");\n        this.resetPosession();\n      }\n    }\n    /////////////////////////////////////\n    ///////////////////////////// IF BALL\n    else if (play > 45 && play < 90) {\n      if (ball < 4 && outs < 3 && strike < 3) {\n        this.setState({\n          ball: ball + 1\n        });\n        alert(\"Ball!\");\n        if (guestAtBat) {\n          this.setState({\n            pitchesGuest: pitchesGuest + 1\n          });\n        } else {\n          this.setState({\n            pitchesHome: pitchesHome + 1\n          });\n        }\n      } else if (ball > 3 && outs < 3 && strike < 3) {\n        this.setState({\n          ball: ball + 1,\n          outs: outs + 1\n        });\n        alert(\"Out!\");\n        this.resetPosession();\n      }\n    }\n    /////////////////////////////////////\n    ////////////////////////// IF HOMERUN\n    else if (play > 90) {\n      if (guestAtBat) {\n        if (strike < 3 && ball < 4) {\n          this.setState({\n            guestScore: guestScore + 1,\n            inningHRCounter: inningHRCounter + 1,\n            guestInningTotal: guestInningUpdatedTotal,\n            pitchesGuest: pitchesGuest + 1\n          });\n          alert(\"Guest Team Homerun!\");\n          this.resetPosession();\n        }\n      } else if (homeAtBat) {\n        if (strike < 3 && ball < 4) {\n          this.setState({\n            homeScore: homeScore + 1,\n            inningHRCounter: inningHRCounter + 1,\n            homeInningTotal: homeInningUpdatedTotal,\n            pitchesHome: pitchesHome + 1\n          });\n          alert(\"Home Team Homerun!\");\n          this.resetPosession();\n        }\n      }\n    }\n  };\n\n  render() {\n    const {\n      ball,\n      strike,\n      outs,\n      homerun,\n      guestScore,\n      homeScore,\n      guestAtBat,\n      homeAtBat,\n      guestInning,\n      guestInningTotal,\n      homeInning,\n      homeInningTotal,\n      pitchesGuest,\n      pitchesHome\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"btn_controls--container\">\n          {/* GAME IS DONE WHEN MORE THAN 9 INNINGS  */}\n          {homeInning < 3 ? (\n            ball === 4 || strike === 3 || outs === 3 ? (\n              <button onClick={this.nextPossession} className=\"play-btn\">\n                {outs === 3\n                  ? \"Click for Next TEAM!\"\n                  : \"Click for Next Possession!\"}\n              </button>\n            ) : (\n              <button onClick={this.handleClick} className=\"play-btn\">\n                Play Ball!\n              </button>\n            )\n          ) : (\n            <button disabled>GAME OVER!</button>\n          )}\n\n          <button onClick={this.handleGameRestart} id=\"restart-btn\">\n            New Game!\n          </button>\n        </div>\n\n        {/* IF GAME IS DONE, GAME OVER MESSAGE, IF NOT, SHOW WHAT TEAM\n        IS AT BAT */}\n        {homeInning > 2 ? (\n          <div className=\"at-bat\">\n            GAME OVER!\n            {guestScore > homeScore\n              ? \" WINNER GUEST TEAM!\"\n              : guestScore === homeScore\n              ? \" TIE BALL GAME\"\n              : \" WINNER HOME TEAM!\"}\n          </div>\n        ) : (\n          <div className=\"at-bat\">At Bat: {guestAtBat ? \"Guest\" : \"Home\"}</div>\n        )}\n\n        <Display\n          ball={ball}\n          strike={strike}\n          outs={outs}\n          homerun={homerun}\n          guestScore={guestScore}\n          homeScore={homeScore}\n          guestAtBat={guestAtBat}\n          homeAtBat={homeAtBat}\n          guestInningTotal={guestInningTotal}\n          homeInningTotal={homeInningTotal}\n          guestInning={guestInning}\n          homeInning={homeInning}\n          pitchesGuest={pitchesGuest}\n          pitchesHome={pitchesHome}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}